rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role from their profile document.
    // This is the single source of truth for a user's permissions.
    function getUserRole(userId, appId) {
      return get(/databases/$(database)/documents/artifacts/$(appId)/users/$(userId)/profile/data).data.role;
    }

    // Helper function to check if the currently authenticated user is an 'admin'.
    function isAdmin(appId) {
      // User must be logged in and their role must be 'admin'.
      return request.auth != null && getUserRole(request.auth.uid, appId) == 'admin';
    }

    // Match the root collection for the application, using a wildcard for the appId.
    match /artifacts/{appId} {

      // --- User Profile Rules ---
      // Path: /artifacts/{appId}/users/{userId}/profile/data
      match /users/{userId}/profile/data {
        // READ:
        // - Admins can read any user's profile (for the user management panel).
        // - Any authenticated user can read their own profile to know their role.
        // - Guests and basic 'user' roles cannot read other users' profiles.
        allow read: if isAdmin(appId) || (request.auth != null && request.auth.uid == userId);

        // CREATE:
        // - A new user can create their own profile upon sign-up.
        // - We enforce that the default role is 'user' and the email matches their auth token.
        // - This prevents users from assigning themselves 'admin' or 'viewer' roles on creation.
        allow create: if request.auth != null && request.auth.uid == userId
                      && request.resource.data.role == 'user'
                      && request.resource.data.email == request.auth.token.email;

        // UPDATE:
        // - Only Admins can update user profiles (i.e., change a user's role).
        allow update: if isAdmin(appId);

        // DELETE:
        // - Only Admins can delete user profiles.
        allow delete: if isAdmin(appId);
      }

      // --- Video Rules ---
      // Path: /artifacts/{appId}/public/data/videos/{videoId}
      match /public/data/videos/{videoId} {
        // READ:
        // - Any authenticated user (User, Viewer, Admin) can read the video metadata (title, description, etc.).
        // - This allows the UI to display the list of videos, with a lock symbol for those who can't watch.
        // - Guests (unauthenticated) cannot read video data.
        allow read: if request.auth != null;

        // CREATE:
        // - Only Admins can create (upload) new videos.
        // - We validate that all required fields (title, videoUrl, channel) are present and not empty.
        // - We also enforce that the 'uploaderEmail' matches the admin's authenticated email.
        allow create: if isAdmin(appId)
                      && 'title' in request.resource.data && request.resource.data.title is string && request.resource.data.title.size() > 0
                      && 'videoUrl' in request.resource.data && request.resource.data.videoUrl is string && request.resource.data.videoUrl.size() > 0
                      && 'channel' in request.resource.data && request.resource.data.channel is string && request.resource.data.channel.size() > 0
                      && request.resource.data.uploaderEmail == request.auth.token.email;

        // UPDATE & DELETE:
        // - Only Admins can update or delete existing videos.
        allow update, delete: if isAdmin(appId);
      }
    }
  }
}